services:
  # Backend API Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: habit-tracker-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/habit-tracker
      - JWT_SECRET=${JWT_SECRET:-your_super_secret_jwt_key_here}
      - EMAIL_USER=${EMAIL_USER:-your_email@gmail.com}
      - EMAIL_PASS=${EMAIL_PASS:-your_email_password}
      - PORT=5000
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - habit-tracker-network

  # Frontend React Service  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: habit-tracker-frontend
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - habit-tracker-network

  # MongoDB Database Service
  mongo:
    image: mongo:7.0
    container_name: habit-tracker-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=habit-tracker
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - habit-tracker-network

  # MongoDB Admin Interface (Optional)
  mongo-express:
    image: mongo-express:latest
    container_name: habit-tracker-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - habit-tracker-network

volumes:
  mongo_data:
    driver: local

networks:
  habit-tracker-network:
    driver: bridge
